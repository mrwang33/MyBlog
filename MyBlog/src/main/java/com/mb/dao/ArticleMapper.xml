<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mb.dao.ArticleMapper" >
  <resultMap id="ArticleMap" type="com.mb.entity.Article" >
    <id column="article_id" property="articleId" jdbcType="VARCHAR" />
    <result column="article_title" property="articleTitle" jdbcType="VARCHAR" />
    <result column="article_content" property="articleContent" jdbcType="LONGVARCHAR" />
    <result column="article_date" property="articleDate" jdbcType="TIMESTAMP" />
    <result column="article_keywords" property="articleKeywords" jdbcType="VARCHAR" />
    <result column="article_views" property="articleViews" jdbcType="INTEGER" />
    <result column="article_stars" property="articleStars" jdbcType="INTEGER" />
    <result column="article_content" property="articleContent" jdbcType="LONGVARCHAR" />
    <association property="classify" resultMap="com.mb.dao.ClassifyMapper.ClassifyMap"></association>
  </resultMap>
  <sql id="Base_Column_List" >
    article_id, article_title, article_date, article_keywords, article_views, article_stars, 
    art_clas, article_content
  </sql>
  
  <insert id="insert" parameterType="com.mb.entity.Article" >
    insert into article (article_id, article_title, article_date, 
      article_keywords, article_views, article_stars, 
      article_content,art_clas)
    values (#{articleId,jdbcType=VARCHAR}, #{articleTitle,jdbcType=VARCHAR}, #{articleDate,jdbcType=TIMESTAMP}, 
      #{articleKeywords,jdbcType=VARCHAR}, #{articleViews,jdbcType=INTEGER}, #{articleStars,jdbcType=INTEGER}, 
      #{articleContent,jdbcType=LONGVARCHAR},#{classify.classifyId,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.mb.entity.Article" >
    update article
    set article_title = #{articleTitle,jdbcType=VARCHAR},
      article_date = #{articleDate,jdbcType=TIMESTAMP},
      article_keywords = #{articleKeywords,jdbcType=VARCHAR},
      article_views = #{articleViews,jdbcType=INTEGER},
      article_stars = #{articleStars,jdbcType=INTEGER},
      art_clas = #{artClas,jdbcType=INTEGER}
    where article_id = #{articleId,jdbcType=VARCHAR}
  </update>
   <!-- 获取全部 -->
  <select id="getAll" resultMap="ArticleMap">
  	SELECT a.article_id, a.article_title, a.article_date, a.article_keywords, a.article_views
	, a.article_stars, a.article_content, c.classify_id, c.classify_name
		FROM article a
			LEFT JOIN classify c ON a.art_clas = c.classify_id;
  </select>
  <!-- 根据主键删除 -->
  <delete id="delete" parameterType="java.lang.String" >
    delete from article
    where article_id = #{articleId,jdbcType=VARCHAR}
  </delete>
</mapper>