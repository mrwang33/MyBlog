<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mb.dao.UserMapper" >
  <resultMap id="UserMap" type="com.mb.entity.User" >
    <id column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="createDate" property="createdate" jdbcType="TIMESTAMP" />
    <result column="user_state" property="userState" jdbcType="BIT" />
    <result column="user_email" property="userEmail" jdbcType="VARCHAR" />
    <collection property="roles" resultMap="com.mb.dao.RoleMapper.RoleMap"></collection>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    user_id, username, password, createDate, user_email, user_state
  </sql>
  <select id="selectByPrimaryKey" resultMap="UserMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from user
    where user_id = #{userId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from user
    where user_id = #{userId,jdbcType=VARCHAR}
  </delete>
  <insert id="insertSelective" parameterType="com.mb.entity.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="createdate != null" >
        createDate,
      </if>
      <if test="userState != null" >
        user_state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null" >
        #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="userState != null" >
        #{userState,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map" >
    update user
    <set >
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null" >
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.createdate != null" >
        createDate = #{record.createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userState != null" >
        user_state = #{record.userState,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user
    set user_id = #{record.userId,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      createDate = #{record.createdate,jdbcType=TIMESTAMP},
      user_state = #{record.userState,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="update" parameterType="com.mb.entity.User" >
    update user
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null" >
        createDate = #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="userState != null" >
        user_state = #{userState,jdbcType=BIT},
      </if>
    </set>
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mb.entity.User" >
    update user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      createDate = #{createdate,jdbcType=TIMESTAMP},
      user_state = #{userState,jdbcType=BIT}
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>
  
  <!-- 登录 -->
  <select id="login" parameterType="com.mb.entity.User" resultMap="UserMap">
  	select <include refid="Base_Column_List"></include> from user where username=#{username} and password=#{password};
  </select>
  <!-- 获取所有 -->
  <select id="getAll" resultMap="UserMap">
  	SELECT u.user_id, username, `password`, createDate, user_state, user_email, role_id, role_name FROM `user` u LEFT JOIN (SELECT t_user_id AS user_id, role_id, role_name FROM role, user_role WHERE t_role_id = role_id ) t ON u.user_id = t.user_id;
  </select>
  <!-- 根据用户名查找用户 -->
  <select id="getUserByName" parameterType="com.mb.entity.User" resultMap="UserMap">
  	select user_id from user where username=#{username};
  </select>
  <!-- 添加新用户 -->
  <insert id="insert" parameterType="com.mb.entity.User" >
    insert into user (user_id, username, password, 
      createDate, user_state, user_email)
    values (#{userId,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{createdate,jdbcType=TIMESTAMP}, #{userState,jdbcType=BIT},#{userEmail,jdbcType=VARCHAR});
      <if test="roles != null" >
         <foreach collection="roles" item="role" index="index">
	         insert into user_role(t_user_id,t_role_id)
	         values(#{userId},#{role.roleId});
        </foreach>
      </if>
  </insert>
  <!-- 批量删除 -->
  <delete id="deleteList">
  	  	delete from user where user_id in
	<foreach collection="array" open="(" close=")" separator="," item="pk">
		#{pk}
	</foreach>
  </delete>
</mapper>