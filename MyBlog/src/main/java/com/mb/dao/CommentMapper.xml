<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mb.dao.CommentMapper" >
  <resultMap id="CommentMap" type="com.mb.entity.Comment" >
    <id column="comment_id" property="commentId" jdbcType="VARCHAR" />
    <result column="comment_content" property="commentContent" jdbcType="VARCHAR" />
    <result column="comment_date" property="commentDate" jdbcType="TIMESTAMP" />
    <result column="comment_email" property="commentEmail" jdbcType="VARCHAR" />
    <result column="comment_name" property="commentName" jdbcType="VARCHAR" />
    <result column="father_comment_id" property="fatherCommentId" jdbcType="VARCHAR" />
    <association property="article" resultMap="com.mb.dao.ArticleMapper.ArticleMap"></association>
  </resultMap>
  <sql id="Base_Column_List" >
    comment_id, comment_content, comment_date, comment_email, comment_name, com_art_id,father_comment_id
  </sql>
  <!-- 根据id获取评论 -->
  <select id="getById" resultMap="CommentMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from comment
    where comment_id = #{commentId,jdbcType=VARCHAR}
  </select>
  <!-- 根据id删除 -->
  <delete id="delete" parameterType="java.lang.String" >
    delete from comment
    where comment_id = #{commentId,jdbcType=VARCHAR}
  </delete>
  <!-- 新增评论 -->
  <insert id="insert" parameterType="com.mb.entity.Comment" >
    insert into comment (comment_id, comment_content, comment_date, 
      comment_email, comment_name, com_art_id,father_comment_id
      )
    values (#{commentId,jdbcType=VARCHAR}, #{commentContent,jdbcType=VARCHAR}, #{commentDate,jdbcType=TIMESTAMP}, 
      #{commentEmail,jdbcType=VARCHAR}, #{commentName,jdbcType=VARCHAR}, #{article.articleId,jdbcType=VARCHAR},#{fatherCommentId,jdbcType=VARCHAR}
      )
  </insert>
  <!-- 根据id更新 -->
  <update id="updateByPrimaryKey" parameterType="com.mb.entity.Comment" >
    update comment
    set comment_content = #{commentContent,jdbcType=VARCHAR},
      comment_date = #{commentDate,jdbcType=TIMESTAMP},
      comment_email = #{commentEmail,jdbcType=VARCHAR},
      comment_name = #{commentName,jdbcType=VARCHAR},
      com_art_id = #{article.articleId,jdbcType=VARCHAR}
      father_comment_id=#{fatherCommentId,jdbcType=VARCHAR}
    where comment_id = #{commentId,jdbcType=VARCHAR}
  </update>
  <!-- 获取此博文下的所有根评论 -->
  <select id="getRootComment" parameterType="java.lang.String" resultMap="CommentMap">
  	SELECT <include refid="Base_Column_List" /> FROM `comment` WHERE com_art_id=#{articleId} AND father_comment_id IS NULL ORDER BY comment_date DESC;
  </select>
  <!-- 获取该评论的所有子回复 -->
  <select id="getChild" parameterType="com.mb.entity.Comment" resultMap="CommentMap">
  	SELECT <include refid="Base_Column_List" /> FROM `comment` WHERE father_comment_id=#{commentId} ORDER BY comment_date DESC;
  </select>
  <!-- 获取该博文下所有评论数 -->
  <select id="getCountInThisArticle" resultType="java.lang.Integer">
  	SELECT COUNT(comment_id) FROM `comment` WHERE com_art_id=#{articleId,jdbcType=VARCHAR};
  </select>
  <!-- 获取所有 -->
  <select id="getAll" resultMap="CommentMap">
  	SELECT c.comment_id,c.comment_name,c.comment_content,c.comment_date,c.comment_email,a.article_title FROM `comment` c, article a WHERE article_id = com_art_id;
  </select>
  <!-- 批量删除 -->
  <delete id="deleteList">
 	DELETE FROM `comment` WHERE comment_id IN
	<foreach collection="array" open="(" close=")" separator="," item="pk">
		#{pk}
	</foreach>
  </delete>
</mapper>